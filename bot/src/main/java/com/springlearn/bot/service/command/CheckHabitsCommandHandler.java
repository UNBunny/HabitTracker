package com.springlearn.bot.service.command;

import com.springlearn.bot.client.BackendClient;
import com.springlearn.bot.dto.HabitResponseDto;
import com.springlearn.bot.dto.UserDto;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Component;

import java.util.List;

@Slf4j
@RequiredArgsConstructor
@Component
public class CheckHabitsCommandHandler implements CommandHandler {

    private final BackendClient backendClient;

    @Override
    public String handle(long chatId, String messageText, String userName) {
        UserDto existingUser = backendClient.getUserByTelegramChatId(chatId);
        if (existingUser == null) {
            return "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.";
        }

        List<HabitResponseDto> habits = backendClient.getHabitsByUser(existingUser.getId());

        StringBuilder response = new StringBuilder("–í–∞—à–∏ –ø—Ä–∏–≤—ã—á–∫–∏:\n");
        for (HabitResponseDto habit : habits) {
            response.append("üîπ *–ù–∞–∑–≤–∞–Ω–∏–µ:* ").append(habit.getName()).append("\n")
                    .append("üìñ *–û–ø–∏—Å–∞–Ω–∏–µ:* ").append(habit.getDescription()).append("\n")
                    .append("üìÇ *–ö–∞—Ç–µ–≥–æ—Ä–∏—è:* ").append(habit.getCategory()).append("\n")
                    .append("‚è≥ *–ß–∞—Å—Ç–æ—Ç–∞:* ").append(habit.getFrequency()).append("\n\n");
        }

        return response.toString();
    }

    @Override
    public String handleUserInput(long chatId, String messageText, String userName) {
        return "";
    }
}
